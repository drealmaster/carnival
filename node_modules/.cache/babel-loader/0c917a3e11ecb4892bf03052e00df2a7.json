{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chinenye\\\\Desktop\\\\DELIGHT\\\\MOVIES\\\\carnival\\\\src\\\\context\\\\LanguageContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Suspense, useContext, useState } from 'react';\nimport i18n from \"i18next\";\nimport { useTranslation, initReactI18next, Trans } from \"react-i18next\";\nimport { translationsEn, translationsCH } from '../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/React.createContext();\ni18n.use(initReactI18next) // passes i18n down to react-i18next\n.init({\n  resources: {\n    en: {\n      translation: translationsEn\n    },\n    ch: {\n      translation: translationsCH\n    }\n  },\n  lng: \"en\",\n  fallbackLng: \"en\",\n  interpolation: {\n    escapeValue: false\n  }\n});\nexport const LanguageProvider = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n\n  const onChange = event => {\n    i18n.changeLanguage(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: \"Loading...\",\n    children: /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n      value: {\n        en,\n        ch,\n        onChange\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LanguageProvider, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LanguageProvider;\nexport const useLanguageContext = () => {\n  _s2();\n\n  return useContext(LanguageContext);\n};\n\n_s2(useLanguageContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"sources":["C:/Users/Chinenye/Desktop/DELIGHT/MOVIES/carnival/src/context/LanguageContext.js"],"names":["React","Suspense","useContext","useState","i18n","useTranslation","initReactI18next","Trans","translationsEn","translationsCH","LanguageContext","createContext","use","init","resources","en","translation","ch","lng","fallbackLng","interpolation","escapeValue","LanguageProvider","t","onChange","event","changeLanguage","target","value","children","useLanguageContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,EAA2CC,KAA3C,QAAwD,eAAxD;AACA,SAAQC,cAAR,EAAwBC,cAAxB,QAA6C,kBAA7C;;AAEA,MAAMC,eAAe,gBAAGV,KAAK,CAACW,aAAN,EAAxB;AAGAP,IAAI,CACDQ,GADH,CACON,gBADP,EACyB;AADzB,CAEGO,IAFH,CAEQ;AACJC,EAAAA,SAAS,EAAE;AACTC,IAAAA,EAAE,EAAE;AAAEC,MAAAA,WAAW,EAAER;AAAf,KADK;AAETS,IAAAA,EAAE,EAAE;AAAED,MAAAA,WAAW,EAAEP;AAAf;AAFK,GADP;AAKJS,EAAAA,GAAG,EAAE,IALD;AAMJC,EAAAA,WAAW,EAAE,IANT;AAOJC,EAAAA,aAAa,EAAE;AAAEC,IAAAA,WAAW,EAAE;AAAf;AAPX,CAFR;AAaA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAQlB,cAAc,EAA5B;;AAEA,QAAMmB,QAAQ,GAAIC,KAAD,IAAW;AACxBrB,IAAAA,IAAI,CAACsB,cAAL,CAAoBD,KAAK,CAACE,MAAN,CAAaC,KAAjC;AACD,GAFH;;AAGA,sBACI,QAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,YAApB;AAAA,2BACG,QAAC,eAAD,CAAiB,QAAjB;AAA2B,MAAA,KAAK,EAAE;AAClCb,QAAAA,EADkC;AAElCE,QAAAA,EAFkC;AAGlCO,QAAAA;AAHkC,OAAlC;AAAA,gBAKAK;AALA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAlBM;;GAAMP,gB;UACKjB,c;;;KADLiB,gB;AAoBb,OAAO,MAAMQ,kBAAkB,GAAG,MAAM;AAAA;;AACpC,SAAO5B,UAAU,CAACQ,eAAD,CAAjB;AACD,CAFI;;IAAMoB,kB","sourcesContent":["import React, { Suspense, useContext, useState,} from 'react'\r\nimport i18n from \"i18next\";\r\nimport { useTranslation, initReactI18next, Trans } from \"react-i18next\";\r\nimport {translationsEn, translationsCH} from '../utils/helpers'\r\n\r\nconst LanguageContext = React.createContext()\r\n\r\n\r\ni18n\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    resources: {\r\n      en: { translation: translationsEn },\r\n      ch: { translation: translationsCH },\r\n    },\r\n    lng: \"en\",\r\n    fallbackLng: \"en\",\r\n    interpolation: { escapeValue: false },\r\n  });\r\n\r\n\r\nexport const LanguageProvider = () => {\r\n    const { t } = useTranslation();\r\n\r\n    const onChange = (event) => {\r\n        i18n.changeLanguage(event.target.value);\r\n      };\r\n    return (\r\n        <Suspense fallback={\"Loading...\"}>\r\n           <LanguageContext.Provider  value={{\r\n           en,\r\n           ch,\r\n           onChange\r\n        }}>\r\n          {children}\r\n        </LanguageContext.Provider>\r\n        </Suspense>\r\n       \r\n    )\r\n}\r\n\r\nexport const useLanguageContext = () => {\r\n    return useContext(LanguageContext)\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}